version: "3.8"

services:
  backend:
    container_name: backend
    build: ./backend
    image: backend
    ports:
      - "5432:5432"
    volumes:
      - backend:/backend
    networks:
      - ft_transcendence
    env_file:
      - .env
    restart: on-failure
  nginx:
    container_name: nginx
    build: ./nginx
    image: nginx
    ports:
      - "8000:443"
    volumes:
      - backend:/backend
    networks:
      - ft_transcendence
    env_file:
      - .env
    restart: on-failure
  prometheus:
    container_name: prometheus
    build: ./prometheus
    image: prometheus
    volumes:
      - prometheus:/volumes/prometheus
    ports:
      - '9090:9090'
    networks:
      - ft_transcendence
    env_file:
      - .env
    restart: unless-stopped
  node_exporter:
    container_name: node_exporter
    build: ./node_exporter
    image: node_exporter
    volumes:
      - node_exporter:/volumes/node_exporter
    ports:
      - '9100:9100'
    networks:
      - ft_transcendence
    env_file:
      - .env
    restart: unless-stopped
  alertmanager:
    container_name: alertmanager
    build: ./alertmanager
    image: alertmanager
    volumes:
      - alertmanager:/volumes/alertmanager
    ports:
      - '9093:9093'
    networks:
      - ft_transcendence
    env_file:
      - .env
    restart: unless-stopped
  grafana:
    container_name: grafana
    build: ./grafana
    image: grafana
    ports:
      - 3000:3000
    volumes:
      - grafana:/volumes/grafana
    networks:
      - ft_transcendence
    env_file:
      - .env
    restart: unless-stopped

volumes:
  backend:
    name: backend
    driver: local
    driver_opts:
      device: ${VOLUME_PATH}/backend
      o: bind
      type: none
  prometheus:
    name: prometheus
    driver: local
    driver_opts:
      device: ${VOLUME_PATH}/prometheus
      o: bind
      type: none
  grafana:
    name: grafana
    driver: local
    driver_opts:
      device: ${VOLUME_PATH}/grafana
      o: bind
      type: none
  node_exporter:
    name: node_exporter
    driver: local
    driver_opts:
      device: ${VOLUME_PATH}/node_exporter
      o: bind
      type: none
  alertmanager:
    name: alertmanager
    driver: local
    driver_opts:
      device: ${VOLUME_PATH}/alertmanager
      o: bind
      type: none

networks:
  ft_transcendence:
    name: ft_transcendence
    driver: bridge
