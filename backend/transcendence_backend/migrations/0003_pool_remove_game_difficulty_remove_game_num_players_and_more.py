# Generated by Django 4.2.7 on 2023-11-09 15:18

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import transcendence_backend.validators


class Migration(migrations.Migration):
    dependencies = [
        (
            "transcendence_backend",
            "0002_delete_blogpost_remove_player_blocked_players_and_more",
        ),
    ]

    operations = [
        migrations.CreateModel(
            name="Pool",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
        ),
        migrations.RemoveField(
            model_name="game",
            name="difficulty",
        ),
        migrations.RemoveField(
            model_name="game",
            name="num_players",
        ),
        migrations.RemoveField(
            model_name="player",
            name="xp",
        ),
        migrations.AddField(
            model_name="game",
            name="ended_at",
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="game",
            name="goal_objective",
            field=models.PositiveIntegerField(
                default=1,
                validators=[
                    django.core.validators.MinValueValidator(1),
                    django.core.validators.MaxValueValidator(15),
                ],
            ),
        ),
        migrations.AddField(
            model_name="game",
            name="ia",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="game",
            name="required_player_number",
            field=models.PositiveIntegerField(default=2),
        ),
        migrations.AddField(
            model_name="game",
            name="started_at",
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="game",
            name="state",
            field=models.CharField(
                choices=[
                    ("waiting", "Waiting"),
                    ("running", "Running"),
                    ("done", "Done"),
                ],
                default="waiting",
                max_length=10,
            ),
        ),
        migrations.AddField(
            model_name="game",
            name="winner",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="games_won",
                to="transcendence_backend.player",
            ),
        ),
        migrations.AddField(
            model_name="player",
            name="blocked_users",
            field=models.ManyToManyField(to="transcendence_backend.player"),
        ),
        migrations.AddField(
            model_name="player",
            name="games",
            field=models.ManyToManyField(to="transcendence_backend.game"),
        ),
        migrations.AlterField(
            model_name="player",
            name="name",
            field=models.CharField(max_length=32),
        ),
        migrations.CreateModel(
            name="Tournament",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "required_player_number",
                    models.PositiveIntegerField(
                        default=2,
                        validators=[
                            transcendence_backend.validators.even_value_validator
                        ],
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_tournaments",
                        to="transcendence_backend.player",
                    ),
                ),
                (
                    "joined_players",
                    models.ManyToManyField(to="transcendence_backend.player"),
                ),
                (
                    "pools",
                    models.ManyToManyField(
                        related_name="tournaments", to="transcendence_backend.pool"
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="pool",
            name="games",
            field=models.ManyToManyField(to="transcendence_backend.game"),
        ),
        migrations.AddField(
            model_name="pool",
            name="tournament",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="tournaments",
                to="transcendence_backend.tournament",
            ),
        ),
        migrations.CreateModel(
            name="GameStat",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("goal_nb", models.PositiveIntegerField(default=0)),
                ("touch_nb", models.PositiveIntegerField(default=0)),
                ("miss_nb", models.PositiveIntegerField(default=0)),
                (
                    "game",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="transcendence_backend.game",
                    ),
                ),
                (
                    "player",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="transcendence_backend.player",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="game",
            name="players",
            field=models.ManyToManyField(
                related_name="games_played",
                through="transcendence_backend.GameStat",
                to="transcendence_backend.player",
            ),
        ),
        migrations.AddField(
            model_name="player",
            name="tournaments",
            field=models.ManyToManyField(to="transcendence_backend.tournament"),
        ),
    ]
